{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"AutonomiQ : Software Testing Automation For full documentation visit autonomiq.github.io . Which part AutonomiQ can help you? AutonomiQ is an autonomous platform that automates every step for the testing life-cycle from test case creation to impact analysis. Generate script Creating test cases, data, and scripts only take minutes instead of hours (or days) with AutonomIQ. As changes occur, AutonomIQ impact analysis quickly identifies them and self-corrects the test assets to prevent false positives and script issues. Shorten the Time The AutonomIQ solution can easily run tests against different environments, devices, and browsers. Head to head tests between the AutonomiQ platform and incumbent automation tools results in a cycle time reduction from 200 hours to just 5 hours. Get in touch Email : sales@autonomiq.io Call us on : 901 - 652 - 5701 Mon-Sat 9am-9pm (PST) Find us at : 3003 North First Street, San Jose, CA, USA","title":"Intro"},{"location":"#autonomiq-software-testing-automation","text":"For full documentation visit autonomiq.github.io .","title":"AutonomiQ : Software Testing Automation"},{"location":"#which-part-autonomiq-can-help-you","text":"","title":"Which part AutonomiQ can help you?"},{"location":"#autonomiq-is-an-autonomous-platform-that-automates-every-step-for-the-testing-life-cycle-from-test-case-creation-to-impact-analysis","text":"Generate script","title":"AutonomiQ is an autonomous platform that automates every step for the testing life-cycle from test case creation to impact analysis."},{"location":"#creating-test-cases-data-and-scripts-only-take-minutes-instead-of-hours-or-days-with-autonomiq-as-changes-occur-autonomiq-impact-analysis-quickly-identifies-them-and-self-corrects-the-test-assets-to-prevent-false-positives-and-script-issues","text":"Shorten the Time","title":"Creating test cases, data, and scripts only take minutes instead of hours (or days) with AutonomIQ. As changes occur, AutonomIQ impact analysis quickly identifies them and self-corrects the test assets to prevent false positives and script issues."},{"location":"#the-autonomiq-solution-can-easily-run-tests-against-different-environments-devices-and-browsers-head-to-head-tests-between-the-autonomiq-platform-and-incumbent-automation-tools-results-in-a-cycle-time-reduction-from-200-hours-to-just-5-hours","text":"","title":"The AutonomIQ solution can easily run tests against different environments, devices, and browsers. Head to head tests between the AutonomiQ platform and incumbent automation tools results in a cycle time reduction from 200 hours to just 5 hours."},{"location":"#get-in-touch","text":"Email : sales@autonomiq.io Call us on : 901 - 652 - 5701 Mon-Sat 9am-9pm (PST) Find us at : 3003 North First Street, San Jose, CA, USA","title":"Get in touch"},{"location":"commands/","text":"AutonomIQ Supported NLP commands NLP supports human understandable english, here is a general primer: Action Field [open/launch/go to/navigate] website [url] open website https://www.google.com launch website https://www.yahoo.com go to website https://www.linkedin.com navigate website https://www.github.com Those commands are exist for access given website address only note that above Instruction could be separated into 2 part which indicating Action field and Data field each wait for {number} seconds wait for 1 secs wait for 5 seconds wait 5 secs wait for command can be used when you want to control the waiting time manually Wait until element is [visible/exists/not visible] Wait until _xpath{ //p[@class='productNumbers'] } is visible Wait until _xpath{ //p[@class='productNumbers'] } is not visible Wait until _xpath{ //p[@class='productNumbers'] } is exists Our engine will wait until given element is coming up within DOM Wait until element is [disabled/enabled] Wait until _xpath{ //p[@class='productNumbers' } is disabled Wait until _xpath{ //p[@class='productNumbers' } is enabled Our engine can check the status of element which could be switched like Switch HTML tag Verify element is element Verify _xpath{ //div[@class='App'] } is _xpath{ //div[@class='App'] } Verify _css{ body:nth-child(6) div:nth-child(2) div.App } is _css{ body:nth-child(6) div:nth-child(2) div.App } Verify _css{ body:nth-child(6) div:nth-child(2) div.App } is _xpath{ //div[@class='App'] } Verify _xpath{ //div[@class='App'] } is _css{ body:nth-child(6) div:nth-child(2) div.App } Our engine is able to compare the 2 given element by using above Verify command Verify element [contains/begins with/ends with] [text] Verify _xpath{ //div[@class='App'] } contains 'sample' Verify _xpath{ //div[@class='App'] } begins with 'sample' Verify _xpath{ //div[@class='App'] } ends with 'sample' Our engine is able to check whether given element has specific text if the a given element has text Verify element [contains/begins with/ends with] [text] [or] [contains/begins with/ends with] Verify _xpath{ //div[@class='App'] } begins with 'auto' or ends with 'nomiq' Text include verification syntax like previous command could be implemented continuously with or syntax Verify the current url is [url] Verify the current url is 'https://www.test.com/' Check the url which currently in with browser whether is same with given url Verify new [window/tab/alert/pop up/pop-up] exists Verify new window exists Verify new tab exists Verify new alert exists Verify new pop up exists Verify new pop-up exists Check if new window or alert or tab or pop up is coming up upon existing window Verify element [exist/exists] Verify _xpath{ //div[@class='App'] } exist Verify _xpath{ //div[@class='App'] } exists Check whether given element is exist on current DOM or not Verify element [does not/doesnt/doesn't] [exists/exist] Verify _xpath{ //div[@class='App'] } does not exists Verify _xpath{ //div[@class='App'] } doesn't exists Verify _xpath{ //div[@class='App'] } doesnt exists Check whether given element is exist on current DOM or not Switch to [first/second/1/1st/2/2nd/3/3rd/original/new] [tab/window] Switch to first tab Switch to second tab Switch to 1 tab Switch to 1st tab Switch to 2 tab Switch to 2nd tab Switch to 3 tab Switch to 3rd tab Switch to original tab Switch to new tab Our engine can switch the context of window if the new tab or window is coming up Switch to [alert/prompt/confirm] and click on [ok/accept/leave/cancel/stay] Switch to alert and click on ok Switch to prompt and click on cancel Switch to confirm and click on accept Our engine can switch the context of window and also do an Actions that prompt has Switch to [alert/prompt] box and enter [text] and click on [ok/accept/leave/cancel/stay] Switch to alert box and enter 'first name' and click on cancel Our engine can do continuous Action regarding what procedure the prompt window has Use custom code from [FileName] Use custom code from MyCustomCode FileName field is going to filled with file name without extension name like .java note that the file should be stored into AutonomiQ minio server prior to use in Test case [click/press] [on/at] [element] Click on 'Submit' Press on 'Cancel' Click at 'Submit' Press at 'Cancel' Our engine is able to do Action with not only element text but also element _xpath [click/press] [on/at] [radio/checkbox] next to [element text] Click on radio next to 'California' Click at checkout next to 'California' Press on radio next to 'California' Press at checkout next to 'California' Our engine can verify the radio or checkbox which located beside text element like Below Select/choose [element text] Select 'California' Choose 'California' This command could be implemented when the DOM has Select tag for select one element from various option Upload file to [field] Upload file to 'Upload xlsx file' This command could be implemented when the website require file uploading step in order to testing functionality note that this command require artifact file which supposed to be uploaded as file by this command Hover [over/on] element Hover over 'user name' Hover on 'user name' This command is needed when user need to check the elements when we hover over the cursor on given element not by Click [Enter/type in/fill in/set] text in [field] Enter 'John Doe' in user name Type in 'John Doe' in user name Fill in 'John Doe' in user name Set 'John Doe' in user name Our engine is able to find the element by text in order to do Action on that element Set screen/window size - * Set screen size - 1024 * 768 This command can change the size of window, especially useful when user's website has different element variation when change the resolution Create random variable [var_name] Create random variable password This command is going to generate random alphanumeric string for checking field's restriction like password field Save element as [variable_name] Save _xpath{ //div[@class='App'] } as first_value This command is going to store the given element's data if given element has value on it note that this command can store multiple value which separated with comma in one variable from table element Save [element text] as [variable_name] Save user name as user_id Save command also able to store the value from text based element [action] and save it as [variable_name] Enter username and save it as user_id This command is going to enable to reuse the same value as data into another step by storing as variable begin block [block_name] [some instructions] end block begin block create_value Create random variable password end block Saved block could be used with calling the name of block as same as saved variable in this case ${create_value} using for loop run ${block name} for [number] times run ${block name} for all rows using for loop run ${click_button} for 5 times using for loop run ${save_value} for all rows This command is useful when user should check same action but multiple time at one time This will shorten the length of test step obviously Data Field ${variable_name} to reference a previously saved variable {Today, } {Today, dd/mm/yy} {Today, mm/dd/yy} {Today, yy/mm/dd} This format is enable to get today's date in the specified format note that you can use yyyy format rather than yy like below {Today, MM/dd/yyyy} {Today + 2{dd}, MM/dd/yyyy} {Today + 2{dd}, MM/dd/yyyy} As of today (11/24/2018) , expected result is (11/26/2018) {Today - 2{dd}, MM/dd/yyyy} {Today - 2{dd}, MM/dd/yyyy} As of today (11/24/2018) , expected result is (11/22/2018) {Today - 1{mm}, MM/dd/yyyy} {Today - 1{mm}, MM/dd/yyyy} As of today (11/24/2018) , expected result is (10/24/2018) {Today - 1{yy}, MM/dd/yyyy} {Today - 1{yy}, MM/dd/yyyy} As of today (11/24/2018) , expected result is (11/24/2017) {Today + 1{yy}, MM/dd/yyyy} {Today + 1{yy}, MM/dd/yyyy} As of today (11/24/2018) , expected result is (11/24/2019)","title":"Command"},{"location":"commands/#autonomiq-supported-nlp-commands","text":"NLP supports human understandable english, here is a general primer:","title":"AutonomIQ Supported NLP commands"},{"location":"commands/#action-field","text":"[open/launch/go to/navigate] website [url] open website https://www.google.com launch website https://www.yahoo.com go to website https://www.linkedin.com navigate website https://www.github.com Those commands are exist for access given website address only note that above Instruction could be separated into 2 part which indicating Action field and Data field each wait for {number} seconds wait for 1 secs wait for 5 seconds wait 5 secs wait for command can be used when you want to control the waiting time manually Wait until element is [visible/exists/not visible] Wait until _xpath{ //p[@class='productNumbers'] } is visible Wait until _xpath{ //p[@class='productNumbers'] } is not visible Wait until _xpath{ //p[@class='productNumbers'] } is exists Our engine will wait until given element is coming up within DOM Wait until element is [disabled/enabled] Wait until _xpath{ //p[@class='productNumbers' } is disabled Wait until _xpath{ //p[@class='productNumbers' } is enabled Our engine can check the status of element which could be switched like Switch HTML tag Verify element is element Verify _xpath{ //div[@class='App'] } is _xpath{ //div[@class='App'] } Verify _css{ body:nth-child(6) div:nth-child(2) div.App } is _css{ body:nth-child(6) div:nth-child(2) div.App } Verify _css{ body:nth-child(6) div:nth-child(2) div.App } is _xpath{ //div[@class='App'] } Verify _xpath{ //div[@class='App'] } is _css{ body:nth-child(6) div:nth-child(2) div.App } Our engine is able to compare the 2 given element by using above Verify command Verify element [contains/begins with/ends with] [text] Verify _xpath{ //div[@class='App'] } contains 'sample' Verify _xpath{ //div[@class='App'] } begins with 'sample' Verify _xpath{ //div[@class='App'] } ends with 'sample' Our engine is able to check whether given element has specific text if the a given element has text Verify element [contains/begins with/ends with] [text] [or] [contains/begins with/ends with] Verify _xpath{ //div[@class='App'] } begins with 'auto' or ends with 'nomiq' Text include verification syntax like previous command could be implemented continuously with or syntax Verify the current url is [url] Verify the current url is 'https://www.test.com/' Check the url which currently in with browser whether is same with given url Verify new [window/tab/alert/pop up/pop-up] exists Verify new window exists Verify new tab exists Verify new alert exists Verify new pop up exists Verify new pop-up exists Check if new window or alert or tab or pop up is coming up upon existing window Verify element [exist/exists] Verify _xpath{ //div[@class='App'] } exist Verify _xpath{ //div[@class='App'] } exists Check whether given element is exist on current DOM or not Verify element [does not/doesnt/doesn't] [exists/exist] Verify _xpath{ //div[@class='App'] } does not exists Verify _xpath{ //div[@class='App'] } doesn't exists Verify _xpath{ //div[@class='App'] } doesnt exists Check whether given element is exist on current DOM or not Switch to [first/second/1/1st/2/2nd/3/3rd/original/new] [tab/window] Switch to first tab Switch to second tab Switch to 1 tab Switch to 1st tab Switch to 2 tab Switch to 2nd tab Switch to 3 tab Switch to 3rd tab Switch to original tab Switch to new tab Our engine can switch the context of window if the new tab or window is coming up Switch to [alert/prompt/confirm] and click on [ok/accept/leave/cancel/stay] Switch to alert and click on ok Switch to prompt and click on cancel Switch to confirm and click on accept Our engine can switch the context of window and also do an Actions that prompt has Switch to [alert/prompt] box and enter [text] and click on [ok/accept/leave/cancel/stay] Switch to alert box and enter 'first name' and click on cancel Our engine can do continuous Action regarding what procedure the prompt window has Use custom code from [FileName] Use custom code from MyCustomCode FileName field is going to filled with file name without extension name like .java note that the file should be stored into AutonomiQ minio server prior to use in Test case [click/press] [on/at] [element] Click on 'Submit' Press on 'Cancel' Click at 'Submit' Press at 'Cancel' Our engine is able to do Action with not only element text but also element _xpath [click/press] [on/at] [radio/checkbox] next to [element text] Click on radio next to 'California' Click at checkout next to 'California' Press on radio next to 'California' Press at checkout next to 'California' Our engine can verify the radio or checkbox which located beside text element like Below Select/choose [element text] Select 'California' Choose 'California' This command could be implemented when the DOM has Select tag for select one element from various option Upload file to [field] Upload file to 'Upload xlsx file' This command could be implemented when the website require file uploading step in order to testing functionality note that this command require artifact file which supposed to be uploaded as file by this command Hover [over/on] element Hover over 'user name' Hover on 'user name' This command is needed when user need to check the elements when we hover over the cursor on given element not by Click [Enter/type in/fill in/set] text in [field] Enter 'John Doe' in user name Type in 'John Doe' in user name Fill in 'John Doe' in user name Set 'John Doe' in user name Our engine is able to find the element by text in order to do Action on that element Set screen/window size - * Set screen size - 1024 * 768 This command can change the size of window, especially useful when user's website has different element variation when change the resolution Create random variable [var_name] Create random variable password This command is going to generate random alphanumeric string for checking field's restriction like password field Save element as [variable_name] Save _xpath{ //div[@class='App'] } as first_value This command is going to store the given element's data if given element has value on it note that this command can store multiple value which separated with comma in one variable from table element Save [element text] as [variable_name] Save user name as user_id Save command also able to store the value from text based element [action] and save it as [variable_name] Enter username and save it as user_id This command is going to enable to reuse the same value as data into another step by storing as variable begin block [block_name] [some instructions] end block begin block create_value Create random variable password end block Saved block could be used with calling the name of block as same as saved variable in this case ${create_value} using for loop run ${block name} for [number] times run ${block name} for all rows using for loop run ${click_button} for 5 times using for loop run ${save_value} for all rows This command is useful when user should check same action but multiple time at one time This will shorten the length of test step obviously","title":"Action Field"},{"location":"commands/#data-field","text":"${variable_name} to reference a previously saved variable {Today, } {Today, dd/mm/yy} {Today, mm/dd/yy} {Today, yy/mm/dd} This format is enable to get today's date in the specified format note that you can use yyyy format rather than yy like below {Today, MM/dd/yyyy} {Today + 2{dd}, MM/dd/yyyy} {Today + 2{dd}, MM/dd/yyyy} As of today (11/24/2018) , expected result is (11/26/2018) {Today - 2{dd}, MM/dd/yyyy} {Today - 2{dd}, MM/dd/yyyy} As of today (11/24/2018) , expected result is (11/22/2018) {Today - 1{mm}, MM/dd/yyyy} {Today - 1{mm}, MM/dd/yyyy} As of today (11/24/2018) , expected result is (10/24/2018) {Today - 1{yy}, MM/dd/yyyy} {Today - 1{yy}, MM/dd/yyyy} As of today (11/24/2018) , expected result is (11/24/2017) {Today + 1{yy}, MM/dd/yyyy} {Today + 1{yy}, MM/dd/yyyy} As of today (11/24/2018) , expected result is (11/24/2019)","title":"Data Field"},{"location":"faq/","text":"Frequently asked questions Do you support on-premise or are you cloud only? We support both the cloud and an on-premise version. You can pick the version you want depending on your security and scale needs. Can Test Scripts be exported to Selenium? Yes, Selenium Scripts are supported out of the box and can be downloaded to your local or cloud environments. Is change management supported? Web page/asset changes within reason are supported. Our algorithms figure out what has changed and what is needed to make your tests continue running. How long does the system take to train against my environment? While TestIQ can work off the box in any environment, efficiently working on your environment requires a couple of weeks What makes you unique? We can work on your web application, allow you to specify your tests in natural language Export all our generated tests to Selenium Track your application for changes and ensure within reason that your tests are still working Also, We have a fully autonomous testing solution available within our labs environment. We are planning to make this available to GA soon. Do you have a Jenkins Plugin? Yes! Please refer to the release page. What if I don't have any tests written in English? We allow users to create tests using our test studio. This is ideal when you don't have tests and are willing to click through a business process sequence. How many tests can you run in parallel? The number of tests in parallel can scale up effectively in our cloud version. For our on-premise version, the number of parallel tests depends on the number of containers you can deploy. What is your pricing ? It's good to have as much as you give :) I want to know more Some further background documentation * Get in touch with sales@autonomiq.io","title":"FAQ"},{"location":"faq/#frequently-asked-questions","text":"","title":"Frequently asked questions"},{"location":"faq/#do-you-support-on-premise-or-are-you-cloud-only","text":"We support both the cloud and an on-premise version. You can pick the version you want depending on your security and scale needs.","title":"Do you support on-premise or are you cloud only?"},{"location":"faq/#can-test-scripts-be-exported-to-selenium","text":"Yes, Selenium Scripts are supported out of the box and can be downloaded to your local or cloud environments.","title":"Can Test Scripts be exported to Selenium?"},{"location":"faq/#is-change-management-supported","text":"Web page/asset changes within reason are supported. Our algorithms figure out what has changed and what is needed to make your tests continue running.","title":"Is change management supported?"},{"location":"faq/#how-long-does-the-system-take-to-train-against-my-environment","text":"While TestIQ can work off the box in any environment, efficiently working on your environment requires a couple of weeks","title":"How long does the system take to train against my environment?"},{"location":"faq/#what-makes-you-unique","text":"We can work on your web application, allow you to specify your tests in natural language Export all our generated tests to Selenium Track your application for changes and ensure within reason that your tests are still working Also, We have a fully autonomous testing solution available within our labs environment. We are planning to make this available to GA soon.","title":"What makes you unique?"},{"location":"faq/#do-you-have-a-jenkins-plugin","text":"Yes! Please refer to the release page.","title":"Do you have a Jenkins Plugin?"},{"location":"faq/#what-if-i-dont-have-any-tests-written-in-english","text":"We allow users to create tests using our test studio. This is ideal when you don't have tests and are willing to click through a business process sequence.","title":"What if I don't have any tests written in English?"},{"location":"faq/#how-many-tests-can-you-run-in-parallel","text":"The number of tests in parallel can scale up effectively in our cloud version. For our on-premise version, the number of parallel tests depends on the number of containers you can deploy.","title":"How many tests can you run in parallel?"},{"location":"faq/#what-is-your-pricing","text":"It's good to have as much as you give :)","title":"What is your pricing?"},{"location":"faq/#i-want-to-know-more","text":"Some further background documentation * Get in touch with sales@autonomiq.io","title":"I want to know more"},{"location":"jenkins/","text":"","title":"Jenkins"},{"location":"pricing/","text":"","title":"Pricing"},{"location":"reference/","text":"","title":"Reference Doc"},{"location":"release-notes/","text":"","title":"Release Note"},{"location":"releases/","text":"","title":"Releases"}]}